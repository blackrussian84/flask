trigger:
  branches:
    include:
      - main
pool:
  name: ec2

variables:
  dockerHubRepository: 'blackrussian84/payoneer'
  dockerHubConnection: 'dockerhub'  # Replace with your Docker Hub service connection name
  dockerImageNameTest: 'testcontainer'
  dockerImageNameApp: 'counter'
  dockerImageTag: '${{ coalesce(variables[''$(Build.SourceBranchName)''], ''latest'') }}'



steps:

- task: CleanupWorkspace@0
  displayName: 'Cleanup Workspace'

  
- task: Docker@2
  displayName: Build and Push
  inputs:
    command: buildAndPush
    containerRegistry: $(dockerHubConnection)
    repository: $(dockerHubRepository)
    tags: |
      $(dockerHubRepository):$(dockerImageTag)

- stage: Deploy
  displayName: 'Deploy Container'
  dependsOn: BuildAndPush
  jobs:
  - job: Deploy
    displayName: 'Deploy to Environment'
    steps:
    - script: |
        docker pull $(dockerHubRepository):$(dockerImageTag)
        docker stop $(dockerHubRepository) || true
        docker rm $(dockerHubRepository) || true
        docker run -d --name $(dockerHubRepository) -p 80:80 $(dockerHubRepository):$(dockerImageTag)
      displayName: 'Deploy Docker Container'

- task: CleanupWorkspace@0
  displayName: 'Cleanup Workspace'
