trigger:
  branches:
    include:
      - main

    manual:
      true  

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'dockerhub'
  imageRepository: 'blackrussian84/payoneer'
  containerRegistry: 'dockerhub'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.SourceBranchName)'

pool:
  name: ec2

stages:
- stage: BuildTest
  displayName: 'Build and Test'
  jobs:
  - job: BuildTestJob
    displayName: 'Build and Test Job'
    steps:
    - task: Docker@0
      displayName: 'clean '
      inputs:
        action: 'Run a Docker command'
        customCommand: 'system prune -a --force'
      condition: always()

    - task: Docker@0
      displayName: 'build test container '
      inputs:
        dockerFile: '**/Dockerfiletest'
        buildArguments: 'docker build -t testpython -f Dockerfiletest .'
        imageName: testpython
        includeLatestTag: true
      condition: always()

    - task: Docker@0
      displayName: 'run test container '
      inputs:
        action: 'Run an image'
        imageName: testpython
        qualifyImageName: false
        ports: 80
        detached: false
      condition: succeeded()

    - task: Docker@0
      displayName: 'remove test '
      inputs:
        action: 'Run a Docker command'
        customCommand: 'image rmi testpython'
      condition: always()

- stage: BuildPush
  displayName: 'Build and Push'
  jobs:
  - job: BuildPushJob
    displayName: 'Build and Push Job'
    steps:
    - task: Docker@2
      displayName: BuildAndPush
      inputs:
        command: 'buildAndPush'
        containerRegistry: dockerhub
        repository: blackrussian84/payoneer
        tags: |
          $(Build.SourceBranchName)
      condition: succeeded()

    - task: Docker@0
      displayName: 'clean  '
      inputs:
        action: 'Run a Docker command'
        customCommand: 'system prune -a --force'
      condition: always()

- stage: Deploy
  displayName: 'Deploy'
  jobs:
  - job: DeployJob
    displayName: 'Deploy Job'
    steps:
    - task: Docker@0
      displayName: 'Deploy'
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryConnection: dockerhub
        action: 'Run a Docker command'
        customCommand: 'pull blackrussian84/payoneer:main && docker run blackrussian84/payoneer:$(Build.SourceBranchNametag)'
        ports: 80
      condition: succeededOrFailed()
